{"name": "test_admin_create_build_type", "status": "failed", "statusDetails": {"message": "AssertionError: Project creation failed: Responding with error, status code: 400 (Bad Request).\n  Details: jetbrains.buildServer.serverSide.DuplicateProjectNameException: Project with this name already exists: project_1740480905\n  Error occurred while processing this request.\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <tests.test_build_config.TestBuildConfig object at 0x107043d00>\n\n    @allure.story(\"Project Admin can create Build Type\")\n    @allure.description(\"Project admin should be able to create build type for their project\")\n    @pytest.mark.regression\n    @pytest.mark.positive\n    @pytest.mark.roles\n    def test_admin_create_build_type(self):\n        with allure.step(\"Create user\"):\n            unique_time = int(time.time())\n            admin_response = self.create_user(f\"admin_{unique_time}\", \"admin123\")\n            assert admin_response.status_code == 200, f\"Admin creation failed: {admin_response.text}\"\n            admin_id = admin_response.json()[\"id\"]\n            admin_auth = self.specs.auth_spec(User(username=admin_response.json()[\"username\"], password=\"admin123\"))\n    \n        with allure.step(\"Create project by admin\"):\n            project_id = f\"project_{unique_time}\"\n            project_response = self.create_project(project_id, self.auth_spec)\n>           assert project_response.status_code == 200, f\"Project creation failed: {project_response.text}\"\nE           AssertionError: Project creation failed: Responding with error, status code: 400 (Bad Request).\nE             Details: jetbrains.buildServer.serverSide.DuplicateProjectNameException: Project with this name already exists: project_1740480905\nE             Error occurred while processing this request.\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\ntests/test_build_config.py:88: AssertionError"}, "description": "Project admin should be able to create build type for their project", "steps": [{"name": "Create user", "status": "passed", "start": 1740480905797, "stop": 1740480905833}, {"name": "Create project by admin", "status": "failed", "statusDetails": {"message": "AssertionError: Project creation failed: Responding with error, status code: 400 (Bad Request).\n  Details: jetbrains.buildServer.serverSide.DuplicateProjectNameException: Project with this name already exists: project_1740480905\n  Error occurred while processing this request.\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/mihailkulibaba/Desktop/work/side_task/wtf/M2_API/teamcity_api_tests/tests/test_build_config.py\", line 88, in test_admin_create_build_type\n    assert project_response.status_code == 200, f\"Project creation failed: {project_response.text}\"\n"}, "start": 1740480905833, "stop": 1740480905852}], "start": 1740480905797, "stop": 1740480905852, "uuid": "8c2041e0-5681-4be2-8498-9b2cb525f794", "historyId": "71b34dbb674e2c9ad44f228f13d12734", "testCaseId": "71b34dbb674e2c9ad44f228f13d12734", "fullName": "tests.test_build_config.TestBuildConfig#test_admin_create_build_type", "labels": [{"name": "epic", "value": "Build Configuration"}, {"name": "feature", "value": "Create Build Type"}, {"name": "story", "value": "Project Admin can create Build Type"}, {"name": "tag", "value": "roles"}, {"name": "tag", "value": "positive"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_build_config"}, {"name": "subSuite", "value": "TestBuildConfig"}, {"name": "host", "value": "MacBook-Air-Mihail.local"}, {"name": "thread", "value": "72451-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_build_config"}]}