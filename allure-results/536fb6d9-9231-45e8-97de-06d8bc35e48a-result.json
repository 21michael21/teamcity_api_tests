{"name": "test_admin_create_build_type_in_foreign_project", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 403, got 200: {\"id\":\"build_1740491121449\",\"name\":\"Build build_1740491121449\",\"projectName\":\"project1_1740491121447\",\"projectId\":\"project1_1740491121447\",\"href\":\"/app/rest/buildTypes/id:build_1740491121449\",\"webUrl\":\"http://localhost:8111/buildConfiguration/build_1740491121449?mode=builds\",\"project\":{\"id\":\"project1_1740491121447\",\"name\":\"project1_1740491121447\",\"parentProjectId\":\"_Root\",\"href\":\"/app/rest/projects/id:project1_1740491121447\",\"webUrl\":\"http://localhost:8111/project.html?projectId=project1_1740491121447\"},\"templates\":{\"count\":0,\"buildType\":[]},\"vcs-root-entries\":{\"count\":0,\"vcs-root-entry\":[]},\"settings\":{\"property\":[{\"name\":\"buildNumberCounter\",\"value\":\"1\"}],\"count\":1},\"parameters\":{\"property\":[],\"count\":0,\"href\":\"/app/rest/buildTypes/id:build_1740491121449/parameters\"},\"steps\":{\"count\":0},\"features\":{\"count\":0},\"triggers\":{\"count\":0},\"snapshot-dependencies\":{\"count\":0},\"artifact-dependencies\":{\"count\":0},\"agent-requirements\":{\"count\":0},\"builds\":{\"href\":\"/app/rest/buildTypes/id:build_1740491121449/builds/\"},\"investigations\":{\"href\":\"/app/rest/investigations?locator=buildType:(id:build_1740491121449)\"},\"compatibleAgents\":{\"href\":\"/app/rest/agents?locator=compatible:(buildType:(id:build_1740491121449))\"},\"compatibleCloudImages\":{}}\nassert 200 == 403\n +  where 200 = <Response [200]>.status_code", "trace": "self = <tests.test_build_config.TestBuildConfig object at 0x104dc3070>\n\n    @allure.story(\"Project Admin cannot create Build Type in another project\")\n    @allure.description(\"Project admin should not be able to create build type for not their project\")\n    @pytest.mark.regression\n    @pytest.mark.negative\n    @pytest.mark.roles\n    def test_admin_create_build_type_in_foreign_project(self):\n        unique_time = int(time.time() * 1000) + random.randint(1, 1000)\n        with allure.step(\"Create user1 (admin)\"):\n            admin1_response = self.create_user(f\"admin1_{unique_time}\", \"admin123\", role=\"\")\n            assert admin1_response.status_code == 200, f\"Admin1 creation failed: {admin1_response.text}\"\n            admin1_id = admin1_response.json()[\"id\"]\n            admin1_auth = self.specs.auth_spec(User(username=admin1_response.json()[\"username\"], password=\"admin123\"))\n    \n        with allure.step(\"Create project1 by admin\"):\n            project1_id = f\"project1_{unique_time}\"\n            project1_response = self.create_project(project1_id, self.auth_spec)\n            assert project1_response.status_code == 200, f\"Project1 creation failed: {project1_response.text}\"\n    \n        with allure.step(\"Grant user1 PROJECT_ADMIN role in project1\"):\n            role1_response = self.grant_role(admin1_id, project1_id, \"PROJECT_ADMIN\")\n            assert role1_response.status_code == 200, f\"Role assignment for user1 failed: {role1_response.text}\"\n    \n        with allure.step(\"Create user2\"):\n            admin2_response = self.create_user(f\"admin2_{unique_time + 1}\", \"admin456\", role=\"\")\n            assert admin2_response.status_code == 200, f\"Admin2 creation failed: {admin2_response.text}\"\n            admin2_id = admin2_response.json()[\"id\"]\n            admin2_auth = self.specs.auth_spec(User(username=admin2_response.json()[\"username\"], password=\"admin456\"))\n    \n        with allure.step(\"Clear user2 roles to ensure no default permissions\"):\n            clear_response = self.clear_user_roles(admin2_id)\n            # Проверяем, что очистка либо успешна, либо ничего не требовалось (None)\n            if clear_response is not None:\n                assert clear_response.status_code in [200, 204], f\"Failed to clear user2 roles: {clear_response.text}\"\n    \n        with allure.step(\"Create project2 by admin\"):\n            project2_id = f\"project2_{unique_time + 1}\"\n            project2_response = self.create_project(project2_id, self.auth_spec)\n            assert project2_response.status_code == 200, f\"Project2 creation failed: {project2_response.text}\"\n    \n        with allure.step(\"Grant user2 PROJECT_ADMIN role in project2\"):\n            role2_response = self.grant_role(admin2_id, project2_id, \"PROJECT_ADMIN\")\n            assert role2_response.status_code == 200, f\"Role assignment for user2 failed: {role2_response.text}\"\n    \n        with allure.step(\"Check user2 roles before creating build type\"):\n            roles_response = self.get_user_roles(admin2_id)\n            assert roles_response.status_code == 200, f\"Failed to get user2 roles: {roles_response.text}\"\n    \n        with allure.step(\"Try to create build type in project1 by user2\"):\n            build_type_id = f\"build_{unique_time + 2}\"\n            build_response = self.create_build_type(build_type_id, project1_id, admin2_auth)\n>           assert build_response.status_code == 403, f\"Expected 403, got {build_response.status_code}: {build_response.text}\"\nE           AssertionError: Expected 403, got 200: {\"id\":\"build_1740491121449\",\"name\":\"Build build_1740491121449\",\"projectName\":\"project1_1740491121447\",\"projectId\":\"project1_1740491121447\",\"href\":\"/app/rest/buildTypes/id:build_1740491121449\",\"webUrl\":\"http://localhost:8111/buildConfiguration/build_1740491121449?mode=builds\",\"project\":{\"id\":\"project1_1740491121447\",\"name\":\"project1_1740491121447\",\"parentProjectId\":\"_Root\",\"href\":\"/app/rest/projects/id:project1_1740491121447\",\"webUrl\":\"http://localhost:8111/project.html?projectId=project1_1740491121447\"},\"templates\":{\"count\":0,\"buildType\":[]},\"vcs-root-entries\":{\"count\":0,\"vcs-root-entry\":[]},\"settings\":{\"property\":[{\"name\":\"buildNumberCounter\",\"value\":\"1\"}],\"count\":1},\"parameters\":{\"property\":[],\"count\":0,\"href\":\"/app/rest/buildTypes/id:build_1740491121449/parameters\"},\"steps\":{\"count\":0},\"features\":{\"count\":0},\"triggers\":{\"count\":0},\"snapshot-dependencies\":{\"count\":0},\"artifact-dependencies\":{\"count\":0},\"agent-requirements\":{\"count\":0},\"builds\":{\"href\":\"/app/rest/buildTypes/id:build_1740491121449/builds/\"},\"investigations\":{\"href\":\"/app/rest/investigations?locator=buildType:(id:build_1740491121449)\"},\"compatibleAgents\":{\"href\":\"/app/rest/agents?locator=compatible:(buildType:(id:build_1740491121449))\"},\"compatibleCloudImages\":{}}\nE           assert 200 == 403\nE            +  where 200 = <Response [200]>.status_code\n\ntests/test_build_config.py:151: AssertionError"}, "description": "Project admin should not be able to create build type for not their project", "steps": [{"name": "Create user1 (admin)", "status": "passed", "start": 1740491120948, "stop": 1740491120983}, {"name": "Create project1 by admin", "status": "passed", "start": 1740491120983, "stop": 1740491121012}, {"name": "Grant user1 PROJECT_ADMIN role in project1", "status": "passed", "start": 1740491121012, "stop": 1740491121035}, {"name": "Create user2", "status": "passed", "start": 1740491121035, "stop": 1740491121065}, {"name": "Clear user2 roles to ensure no default permissions", "status": "passed", "start": 1740491121065, "stop": 1740491121081}, {"name": "Create project2 by admin", "status": "passed", "start": 1740491121081, "stop": 1740491121105}, {"name": "Grant user2 PROJECT_ADMIN role in project2", "status": "passed", "start": 1740491121105, "stop": 1740491121123}, {"name": "Check user2 roles before creating build type", "status": "passed", "start": 1740491121123, "stop": 1740491121138}, {"name": "Try to create build type in project1 by user2", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 403, got 200: {\"id\":\"build_1740491121449\",\"name\":\"Build build_1740491121449\",\"projectName\":\"project1_1740491121447\",\"projectId\":\"project1_1740491121447\",\"href\":\"/app/rest/buildTypes/id:build_1740491121449\",\"webUrl\":\"http://localhost:8111/buildConfiguration/build_1740491121449?mode=builds\",\"project\":{\"id\":\"project1_1740491121447\",\"name\":\"project1_1740491121447\",\"parentProjectId\":\"_Root\",\"href\":\"/app/rest/projects/id:project1_1740491121447\",\"webUrl\":\"http://localhost:8111/project.html?projectId=project1_1740491121447\"},\"templates\":{\"count\":0,\"buildType\":[]},\"vcs-root-entries\":{\"count\":0,\"vcs-root-entry\":[]},\"settings\":{\"property\":[{\"name\":\"buildNumberCounter\",\"value\":\"1\"}],\"count\":1},\"parameters\":{\"property\":[],\"count\":0,\"href\":\"/app/rest/buildTypes/id:build_1740491121449/parameters\"},\"steps\":{\"count\":0},\"features\":{\"count\":0},\"triggers\":{\"count\":0},\"snapshot-dependencies\":{\"count\":0},\"artifact-dependencies\":{\"count\":0},\"agent-requirements\":{\"count\":0},\"builds\":{\"href\":\"/app/rest/buildTypes/id:build_1740491121449/builds/\"},\"investigations\":{\"href\":\"/app/rest/investigations?locator=buildType:(id:build_1740491121449)\"},\"compatibleAgents\":{\"href\":\"/app/rest/agents?locator=compatible:(buildType:(id:build_1740491121449))\"},\"compatibleCloudImages\":{}}\nassert 200 == 403\n +  where 200 = <Response [200]>.status_code\n", "trace": "  File \"/Users/mihailkulibaba/Desktop/work/side_task/wtf/M2_API/teamcity_api_tests/tests/test_build_config.py\", line 151, in test_admin_create_build_type_in_foreign_project\n    assert build_response.status_code == 403, f\"Expected 403, got {build_response.status_code}: {build_response.text}\"\n"}, "start": 1740491121138, "stop": 1740491121188}], "start": 1740491120948, "stop": 1740491121188, "uuid": "41c17977-1e1c-442b-b409-e9647202bac1", "historyId": "fb8c49e7101b0776de1d8868c6f933d3", "testCaseId": "fb8c49e7101b0776de1d8868c6f933d3", "fullName": "tests.test_build_config.TestBuildConfig#test_admin_create_build_type_in_foreign_project", "labels": [{"name": "epic", "value": "Build Configuration"}, {"name": "feature", "value": "Create Build Type"}, {"name": "story", "value": "Project Admin cannot create Build Type in another project"}, {"name": "tag", "value": "roles"}, {"name": "tag", "value": "negative"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_build_config"}, {"name": "subSuite", "value": "TestBuildConfig"}, {"name": "host", "value": "MacBook-Air-Mihail.local"}, {"name": "thread", "value": "80918-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_build_config"}]}